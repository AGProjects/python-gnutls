Changes in version 1.1.8
------------------------

  * Workaround for changed tcp.Server.__init__ signature in twisted 8.2.0
  * Fixed DeprecationWarning when running with python2.6 or newer

Changes in version 1.1.7
------------------------

  * Updated debian build dependency to libgnutls-dev 2.4.1 or newer
  * Use the default python interpreter instead of /usr/bin/python in
    example, test and setup scripts
  * Improved detection of gnutls libraries by using libgnutls-config
  * Fixed gnutls library location for Mac OSX installations

Changes in version 1.1.6
------------------------

  * Require libgnutls version 2.4.1 or higher.

Changes in version 1.1.5
------------------------

  * Added server name extension support.
  * Fixed 64-bit issues with size_t and ssize_t.
  * Require libgnutls version 2.2.2 or higher.

Changes in version 1.1.4
------------------------

  * Better integration with twisted. The TLSClient and TLSServer
    classes now declare that they implement ISSLTransport.

Changes in version 1.1.3
------------------------

  * Better version headers for changelog entries.
  * Check if C module initialization failed.

Changes in version 1.1.2
------------------------

  * Added LICENSE file and updated copyright notices to reference it.
  * Only included the relevant examples in the source distribution.
  * Avoid multiple splits on name/value pairs in X509Name.

Changes in version 1.1.1
------------------------

  * Removed a circular reference manifesting on handshake failures.

Changes in version 1.1.0
------------------------

  * Send TLS bye if the client session peer certificate verification fails
  * Based CertificateError on GNUTLSError and added 4 new certificate related
    exceptions derived from it.
  * Added the ability to send TLS alerts based on certain error conditions
    Using this mechanism a python exception related to GNUTLS can be mapped
    to a TLS alert and sent to the peer which will map it back to the original
    python exception, making it possible to transfer error conditions and
    raise their corresponding exception on the other side that becomes this
    way aware of the errors that occured in the peer. Currently this is used
    to map certificate related exceptions into TLS alerts and back to python
    exceptions on the other side.
  * Send a TLS alert before closing a connection as a result of an error in
    the twisted interface.
  * Preserve closing reason while sending the close alerts.
  * Pass the proper exception when a client connection fails.
  * Improved some exception messages related to certificate errors.
  * Added the ability to specify the certificate name to use in exceptions
    raised by certificate checking methods, which helps improve the clarity
    of the error messages.
  * Set transport on protocol after the TCP connection is made, because we
    may call connectionLost without calling connectionMade if TLS negociation
    fails (which in turn will call connectionLost on the protocol).
  * Added _closeWriteConnection to handle half closed connections.

Changes in version 1.0.2
------------------------

  * Avoid the need to handle bye timeouts in the twisted interface by not
    waiting for the bye notification acknowledgement as we do not use the
    TCP connection anymore after closing the TLS session.

Changes in version 1.0.1
------------------------

  * Fixed typo in internal class name in the twisted interface

